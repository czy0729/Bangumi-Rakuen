{"avatar":"//lain.bgm.tv/pic/user/m/000/27/44/274487.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"<div class=\"codeHighlight\"><pre># command processor<br><br>from __future__ import division<br>import sys, os<br>import cmath<br>import re<br><br>#----------------------------------------------------------------------<br><br>def echo(text):<br>    \"\\ndisplay message.\\n\\tUsage: echo msg\"<br>    print text<br><br>def empty(none):<br>    pass<br><br>def cls(none):<br>    \"\\nclear screen.\\n\\tUsage: cls\"<br>    os.system('cls')<br><br>def cd(path):<br>    \"\\nchange current directory.\\n\\tUsage: cd path\"<br>    os.chdir(path)<br><br>def helps(argv):<br><br>    argv = argv.lower()<br><br>    if argv == '':<br>        for i in commands:<br>            print i<br>        print '\\nType \"help cmd-name for detail\"'<br><br>    elif argv == 'math':<br>        for i, j in enumerate(func):<br>            print j if (i+1) % 7 != 0 else j+'\\n',<br>        print '\\nType \"help function-name\" for detail'<br><br>    elif argv in func:<br>        print func[argv].__doc__<br><br>    elif argv in commands:<br>        print commands[argv].__doc__<br><br>    else:<br>        print 'What do you want?'<br><br>def setprompt(chars):<br>    \"\"\"<br>    set the prompt.\\n\\tUsage: prompt Patterns\\n<br>        The patterns:<br>        $n : a 'return' symbol<br>        $s : a  'space' symbol<br>        $p : the current work path<br>        $$ : stand for a '$'<br>    \"\"\"<br>    global prompt<br>    if chars != '':<br>        for upper, lower in cases:<br>            chars = chars.replace(upper, lower)<br>    else:<br>        chars = '$n$p$n$$'<br><br>    prompt = chars<br><br><br>def evalprompt():<br>    res = prompt<br>    patterns = [<br>                ('$p', os.getcwd()),<br>                ('$s', ' '),<br>                ('$n', '\\n'),<br>                ('$$', '$')<br>               ]<br><br>    for literal, target in patterns:<br>        res = res.replace(literal, target)<br><br>    return res<br><br><br>def evalexp(exp):<br>    '''\\nevaluate a math expression\\n\\tUsage: eval exp<br>    \\nType \"help math\" for available functions'''<br><br>    try:<br>        if re.match(r'.*[^\\w+\\-*/^.()].*', exp):<br>            raise SyntaxError<br>        else:<br>            print eval(exp.replace('^', '**').lower(),<br>                    func, {'e': e, 'pi': pi})<br><br>    except ZeroDivisionError:<br>        print 'Integer division or modulo by zero'<br><br>    except ValueError:<br>        print 'Math domain error'<br><br>    except (SyntaxError, NameError, TypeError):<br>        print 'Invalid syntax, type \"help math\" for help.'<br><br><br>#----------------------------------------------------------------------<br><br>pi        = cmath.pi<br>e         = cmath.e<br><br>prompt    = '$n$p$n$$'<br><br>cases     = [<br>             ('$P', '$p'),<br>             ('$S', '$s'),<br>             ('$N', '$n')<br>            ]<br><br>func      = {f:getattr(cmath, f)<br>                for f in filter(lambda x:<br>                    x not in ['e', 'pi'] and (not x.startswith('_')),<br>                    dir(cmath))<br>            }# import the math functions<br><br>commands  = {<br>             ''       : empty,<br>             'exit'   : sys.exit,<br>             'echo'   : echo,<br>             'shell'  : os.system,<br>             'cd'     : cd,<br>             'cls'    : cls,<br>             'prompt' : setprompt,<br>             'eval'   : evalexp,<br>             'help'   : helps,<br>             } #it's valid functions<br><br>#----------------------------------------------------------------------<br><br>while True:<br># REPL loop<br>    print evalprompt(),<br><br>    try:<br>        cmd = raw_input().strip().replace('\\t', '').split(' ', 1)<br>        args = cmd[1].lstrip() if len(cmd) > 1 else ''<br>        commands[cmd[0].lower()](args)<br><br>    except KeyError:<br>        print 'Invalid command : \"%s\"' % cmd[0]<br><br>    except (EOFError, KeyboardInterrupt):        <br>        sys.exit()<br></pre></div><br><br><br><br>一起完善一下吧 ","time":"2016-1-28 20:11","title":"有会Python的吗？进来看看这个命令行解释器","userId":"lispller","userName":"logout","userSign":"(none)"}