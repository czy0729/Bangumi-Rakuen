{"id":371350,"avatar":"//lain.bgm.tv/pic/user/m/000/65/41/654191.jpg","floor":"#1","group":"靠谱人生茶话会","groupHref":"/group/boring","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/03/364.jpg","message":"原标题;优雅吗?优雅吧!<br><br><br>想逃离屎山<br>不想再修屎山了<br><br>我想......现在的我比起我更像我<img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><img src=\"/img/smiles/tv/51.gif\" smileid=\"90\" alt=\"(bgm74)\"><br><br><div class=\"codeHighlight\"><pre><br>#include <stdio.h><br>#include <stdlib.h><br>#include <stdbool.h><br>#include <stdexcept><br><br><br>typedef struct node node;<br><br><br>typedef node* link;<br>struct  node {int num; link next;};<br>node* getItem(const link& ls) {return (node*) ls;}<br>void  setItem(link& ls, node* l) {ls = l;}<br>void  setItem(link& ls, node& l) {ls = &l;}<br>link& subLink(const link& ls) {return getItem(ls)->next;}<br>link  iniLink() {return NULL;}<br>link  ERROR = (link) 1;<br><br><br>// typedef node link;<br>// struct  node {int num; node* next;};<br>// node* getItem(const link& ls) {return ls.next;}<br>// void  setItem(link& ls, node* l) {ls.next = l;}<br>// void  setItem(link& ls, node& l) {ls.next = &l;}<br>// link& subLink(const link& ls) {return *getItem(ls);}<br>// link  iniLink() {return {-1, NULL};}<br>// link  ERROR = {-1, (node*) 1};<br><br><br>bool emptyLinkp(const link& ls) {return NULL == getItem(ls);}<br>bool errorLinkp(const link& ls) {return &ls == &ERROR;}<br><br><br>void displayList(link& head)<br>{<br>    printf(\"( \");<br>    for(link* p = &head; !emptyLinkp(*p); p = &subLink(*p)) {<br>        printf(\"%d \", getItem(*p)->num);<br>    }<br>    printf(\")\\n\");<br>}<br><br><br>// link& linkTail(link& head, const int loc)<br>// {<br>//     link* p = &head;<br>//     int i = 0;<br>//     for(; !emptyLinkp(*p) && i < loc; p = &subLink(*p), i++) {;}<br>//     link& ls = *p;<br>//<br>//     if(i < loc) {return ERROR;}<br>//     return ls;<br>// }<br><br>link& linkTail(link& head, const int loc)<br>{<br>    if(0 == loc) {return head;}<br>    if(emptyLinkp(head)) {return ERROR;}<br>    return linkTail(subLink(head), loc-1);<br>}<br><br><br>void addNode(link& head, node& item, const int loc)<br>{<br>    link& ls = linkTail(head, loc);<br>    if(errorLinkp(ls)) {return;}<br>    item.next = getItem(ls);<br>    setItem(ls, item);<br>}<br><br>void removeNode(link& head, const int loc)<br>{<br>    link& ls = linkTail(head, loc);<br>    if(errorLinkp(ls) || emptyLinkp(ls)) {return;}<br>    link& next = subLink(ls);<br>    setItem(ls, getItem(next));<br>    setItem(next, NULL);<br>}<br><br><br>// void removeIf(link& head, bool rm(const node&))<br>// {<br>//     for(link* p = &head; !emptyLinkp(*p);)<br>//     {<br>//         link& curr = *p;<br>//         link& next = subLink(curr);<br>//         if(rm(*getItem(curr))) {<br>//             setItem(curr, getItem(next));<br>//             setItem(next, NULL);<br>//         } else {<br>//             p = &next;<br>//         }<br>//     }<br>// }<br><br>void removeIf(link& head, bool rm(const node&))<br>{<br>    if(emptyLinkp(head)) {return;}<br>    if(rm(*getItem(head)))<br>    {<br>        link& next = subLink(head);<br>        setItem(head, getItem(next));<br>        setItem(next, NULL);<br>        return removeIf(head, rm);<br>    }<br>    return removeIf(subLink(head), rm);<br>}<br><br><br>bool eq1p(const node& n) {return 1 == n.num;}<br><br><br>int main(int argc, char *argv[])<br>{<br>    link ls1 = iniLink();<br>    displayList(ls1);<br><br>    node n1 = {1, NULL};<br>    node n2 = {2, NULL};<br>    node n3 = {1, NULL};<br><br>    addNode(ls1, n1, 0);<br>    displayList(ls1);<br><br>    addNode(ls1, n2, 1);<br>    displayList(ls1);<br><br>    addNode(ls1, n3, 2);<br>    displayList(ls1);<br><br><br>    removeIf(ls1, eq1p);<br>    displayList(ls1);<br><br>    removeNode(ls1, 0);<br>    displayList(ls1);<br><br><br>    return 0;<br>}<br></pre></div> ","time":"2022-7-6 18:06","title":"人类的征途就是逃离屎山","userId":"ccaatt","userName":"阿猫✅官方认证♀","userSign":"(我是阿猫，看轻小说)"}