{"id":411656,"avatar":"//lain.bgm.tv/pic/user/m/000/60/15/601573.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"(原标题：Python如何实现高效包管理)<br>是用poetry，uv 还是 rye？<br>请教一下班友<br><br>#update<br>根据班友建议和项目文档，目前用<span style=\"font-weight:bold;\">uv</span>，体验良好(#7)。感谢大家<img src=\"/img/smiles/tv/40.gif\" smileid=\"79\" alt=\"(bgm63)\"><br><span class=\"text_mask\" style=\"background-color:#555;color:#555;border:1px solid #555;\">uv的速度有爽到</span><br><br><br>以下为信息整理：<br><span style=\"font-size:14px; line-height:14px;\">0️⃣<span style=\"font-weight:bold;\">pip+venv</span><br>自带的基本包管理和虚拟环境管理工具<br>1️⃣<span style=\"font-weight:bold;\">uv</span><br>虚拟环境管理，包管理，项目依赖管理，python版本管理<br>Fast Python package and project manager, written in Rust.<br><span style=\"font-weight:bold;\">rye</span>的开发者已经将项目托付给uv开发者<br>2️⃣<span style=\"font-weight:bold;\">poetry</span><br>项目依赖管理（自动管理包和虚拟环境）<br>Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.<br>3️⃣<span style=\"font-weight:bold;\">conda mamba</span><br>虚拟环境管理，包管理，python版本管理<br>(mamba) The Fast Cross-Platform Package Manager<br><span style=\"font-weight:bold;\">micromamba</span><br>The statically linked version of mamba.<br>4️⃣<span style=\"font-weight:bold;\">pipx</span><br>特定的包管理（安装一个 Python CLI 工具，并将其隔离在一个虚拟环境中）<br>Install and Run Python Applications in Isolated Environments</span>","time":"2024-12-11 07:34","title":"Python实现高效包管理的办法","userId":"annblack","userName":"Ann","userSign":"(如果我们忽略了自己，便无法认识身外的各种事物。)"}