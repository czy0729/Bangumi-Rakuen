{"avatar":"//lain.bgm.tv/pic/user/m/000/39/14/391476.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"有一串正整数数组，每次可以去掉一个数，或一个回文数子串，剩下的数顺序不变组成一个新数组，然后重复上面步骤，最少需要几次可以让数组为空？<br><br>目前考虑是分两种情况取最小值的推导式，来万能的bangumi问一下各位有没有更好的思路，欢迎大家讨论<img src=\"/img/smiles/tv/17.gif\" smileid=\"56\" alt=\"(bgm40)\"><img src=\"/img/smiles/tv/17.gif\" smileid=\"56\" alt=\"(bgm40)\"><img src=\"/img/smiles/tv/17.gif\" smileid=\"56\" alt=\"(bgm40)\"><br><br>/* 2019年4月4日补充 */<br>不好意思问题有一点没有描述清楚，稍微补充一下<br>这里的正整数应该小于10的<br>举个例子，比如初始数组为{1, 2, 3, 1, 2, 1}<br>第一次去掉第四个数1，得到{1, 2, 3, 2, 1}<br>第二次可以一次性去掉这个回文数组，所以最少为两次<br><br>目前考虑的转移式 f[i, j]=min(f<span style=\"font-style:italic\">[t-1] + f[t+1][j], f[i + k, j - k])<br>其中t是i到j之间，k是从i往后和从j往前最长能够构成回文的长度<br><br>一晚上能收到这么多回复有点吃惊，我会好好思考一下大家的想法，再次十分感谢大家<img src=\"/img/smiles/tv/70.gif\" smileid=\"109\" alt=\"(bgm93)\"></span>","time":"2019-4-3 23:02","title":"求解一道动态规划的问题思路","userId":"kagaya85","userName":"かがや","userSign":"(障子を開けよ、外の世界は広いぞ——豊田佐吉 ...)"}