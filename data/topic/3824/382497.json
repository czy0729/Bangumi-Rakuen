{"id":382497,"avatar":"//lain.bgm.tv/pic/user/m/000/78/85/788548.jpg","floor":"#1","group":"评分与排名讨论会","groupHref":"/group/qpz","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/39/3967.jpg?r=1436499902","message":"参考文献：<a href=\"https://bgm.tv/group/topic/371075\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">基于偏序网络的更简单易懂的科学作品排名（附截至2021年2月的动画排名实例）</a><br>原则：<span style=\"font-weight:bold;\">作品 i 优于作品 j ⇔ 同时对 i 和 j 进行评分的用户中，认为 i 更优的用户多于 j</span><br>算法：<div class=\"quote\"><q>1. 考虑作品 i 和作品 j。假设有 n 名用户同时对 i 和 j 进行了评分，其中 x 人对 i 的评分高于 j，y 人对 i 的评分低于 j，则：<br>(1) 如果 n≥10，则<br>  (1.1) 定义 i 对 j 的“合计积分（Total Score）”为 (x-y) 分；<br>  (1.2) 定义 i 对 j 的“比例积分（Percentage Score）”为 (x-y)/n 分，接近于科学排名中的“倾向性概率”；<br>  (1.3) 定义 i 对 j 的“简易积分（Simple Score）”为 sgn(x-y) 分，其中 sgn 表示符号函数（即正数取值为 1，负数取值为 -1，0 取值为 0）;<br>  (1.4) 定义 i 对 j 的“折衷积分（Compromised Score）”为 (x-y)/sqrt(n) 分。<br>(2) 如果 n<10，则四种积分一律记为 0 分。<br>2. 针对每一个作品 i，分别计算 i 相对于考虑范围内的所有其他作品 j (j≠i) 的积分，然后取对其他所有作品的平均分作为 i 的最终得分。</q></div>鸣谢原作者，还有 <a href=\"https://www.kaggle.com/datasets/klion23/bangumi15m\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">Kaggle 上的数据集</a>——如标题所述，数据是最新最热的。<br>因此，笔者实际的贡献只是实现了算法。虽说不难，但是如果暴力跑要 26 个小时。笔者花了一个月的时间学习研究，<span style=\"text-decoration: line-through;\">顺便研究本子，</span>终归一无所获。<br>不过今天在与 Copilot 进行深入交流之后得出结论：pandas.DataFrame 相比 numpy.ndarray 就是一坨。后者的效率比前者高 30 到 300 倍！优化之后，整个算法能在 30 分钟之内完成，瓶颈也变成了抓取数据这一步。<br><br><span style=\"font-size:25px; line-height:25px;\"><a href=\"https://github.com/CryoVit/bangumi-anime-ranking\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">Star me on Github</a></span><br><br><span style=\"font-size:25px; line-height:25px;\"><a href=\"https://wwzn.lanzouw.com/ipRlX0xwuzzg\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">xlsx 下载</a> 密码：60wu</span> ","time":"2023-6-1 16:38","title":"【2023.6】基于偏序网络的更简单易懂的科学作品排名","userId":"788548","userName":"CryoVit","userSign":"(評価しない。)"}