{"id":408207,"avatar":"//lain.bgm.tv/pic/user/m/000/49/79/497947.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"弄了一下午+一晚上还是不行,要吐血了<br>我是小白,油猴脚本全部ai写的,目前可以顺利调用模型自动翻译\\缓存翻译结果,但是遇到长介绍会等很久,如果可以流式输出就好了.<br>哪位感兴趣的老哥帮忙完善一下油猴脚本,实现流式翻译,感激不尽<img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><br><br><a href=\"https://bgm.tv/group/topic/407615\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">主帖</a><br>配置教程:<br>1.<a href=\"https://ollama.com/\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">部署ollama</a><br>2.部署<a href=\"https://huggingface.co/SakuraLLM/GalTransl-7B-v2.6\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">GalTransl</a>模型或者其他模型<br>3.<a href=\"https://greasyfork.org/zh-TW/scripts/513293-bgm-ollama-%E7%BF%BB%E8%AF%91%E5%99%A8\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">安装脚本</a>并配置参数<br><br>效果图:<br><img src=\"https://www.helloimg.com/i/2024/10/20/6714fad3b6abe.png\" class=\"code\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\" alt><br><img src=\"https://www.helloimg.com/i/2024/10/20/6714faf7e35fe.png\" class=\"code\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\" alt><br><br>代码:<br><br><div class=\"codeHighlight\"><pre>// ==UserScript==<br>// @name         BGM Ollama 翻译器<br>// @namespace    http://tampermonkey.net/<br>// @version      1.4<br>// @description  使用 Ollama 翻译 Bangumi 的作品简介和角色简介，支持模型切换、缓存翻译记录、术语表和提示格式选择。自动检测中文,日文,英文.<br>// @author       Sedoruee<br>// @match        https://bgm.tv/subject/*<br>// @match        https://bgm.tv/character/*<br>// @grant        GM_xmlhttpRequest<br>// @grant        GM_setValue<br>// @grant        GM_getValue<br>// @license MIT<br>// ==/UserScript==<br><br>(function() {<br>'use strict';<br><br>const ollamaEndpoint = 'http://localhost:11434/api/generate'; // **修改为你自己的 Ollama API 地址**<br><br>// 配置选项<br>const config = {<br>    subject: {<br>        model: 'GalTransl7B_v2.6_Q6_K', // 条目翻译模型<br>        autoTranslate: 0,    // 0: 自动，1: 手动<br>        useNewPromptFormat: 1 // 0: 其他模型，1: Sakura模型1.0版及以上/GalTransl模型 (支持术语表)<br>    },<br>    character: {<br>        model: 'GalTransl7B_v2.6_Q6_K', // 角色翻译模型<br>        autoTranslate: 0,             // 0: 自动，1: 手动<br>        useNewPromptFormat: 1,          // 0: 其他模型，1: Sakura模型1.0版及以上/GalTransl模型 (支持术语表)<br>        glossary: [                     // 角色翻译术语表<br>            {\"src\": \"可选\", \"dst\": \"可选\", \"info\": \"可选\"},<br>            {\"src\": \"可选\", \"dst\": \"可选\"},<br>        ]<br>    }<br>};<br><br>// 获取页面类型和ID<br>const isSubjectPage = window.location.href.includes('/subject/');<br>const pageType = isSubjectPage ? 'subject' : 'character';<br>const id = window.location.href.match(isSubjectPage ? /subject\\/(\\d+)/ : /character\\/(\\d+)/)[1];<br><br>// 获取配置<br>const { model, autoTranslate, useNewPromptFormat, glossary } = config[pageType];<br>const detailElement = isSubjectPage ? document.getElementById('subject_summary') : document.querySelector('div.detail');<br>const cacheKey = `translatedText_${id}_${model}`;<br><br><br>// 显示状态<br>function displayStatus(message) {<br>    console.log(message); //  在控制台也显示状态<br>    const statusDiv = document.getElementById('translationStatus') || document.createElement('div');<br>    statusDiv.id = 'translationStatus';<br>    statusDiv.textContent = message;<br>    statusDiv.style.marginTop = '5px';<br>    if (isSubjectPage) {<br>        detailElement.parentNode.insertBefore(statusDiv, detailElement.nextSibling);<br>    } else {<br>        detailElement.appendChild(statusDiv);<br>    }<br>}<br><br><br>// 检查文本是否包含中文<br>function isChinese(text) {<br>    return //.test(text);<br>}<br>// 检查文本是否包含日文，并检查日文占比<br>function shouldTranslateJapanese(text) {<br>  const hiragana = [<br>    \"あ\", \"い\", \"う\", \"え\", \"お\",<br>    \"か\", \"き\", \"く\", \"け\", \"こ\",<br>    \"さ\", \"し\", \"す\", \"せ\", \"そ\",<br>    \"た\", \"ち\", \"つ\", \"て\", \"と\",<br>    \"な\", \"に\", \"ぬ\", \"ね\", \"の\",<br>    \"は\", \"ひ\", \"ふ\", \"へ\", \"ほ\",<br>    \"ま\", \"み\", \"む\", \"め\", \"も\",<br>    \"や\", \"ゆ\", \"よ\",<br>    \"ら\", \"り\", \"る\", \"れ\", \"ろ\",<br>    \"わ\", \"を\", \"ん\",<br>    \"ぁ\", \"ぃ\", \"ぅ\", \"ぇ\", \"ぉ\",<br>    \"ゃ\", \"ゅ\", \"ょ\",<br>    \"っ\",<br>    \"が\", \"ぎ\", \"ぐ\", \"げ\", \"ご\",<br>    \"ざ\", \"じ\", \"ず\", \"ぜ\", \"ぞ\",<br>    \"だ\", \"ぢ\", \"づ\", \"で\", \"ど\",<br>    \"ば\", \"び\", \"ぶ\", \"べ\", \"ぼ\",<br>    \"ぱ\", \"ぴ\", \"ぷ\", \"ぺ\", \"ぽ\"<br>  ];<br><br>  const katakana = [<br>    \"ア\", \"イ\", \"ウ\", \"エ\", \"オ\",<br>    \"カ\", \"キ\", \"ク\", \"ケ\", \"コ\",<br>    \"サ\", \"シ\", \"ス\", \"セ\", \"ソ\",<br>    \"タ\", \"チ\", \"ツ\", \"テ\", \"ト\",<br>    \"ナ\", \"ニ\", \"ヌ\", \"ネ\", \"ノ\",<br>    \"ハ\", \"ヒ\", \"フ\", \"ヘ\", \"ホ\",<br>    \"マ\", \"ミ\", \"ム\", \"メ\", \"モ\",<br>    \"ヤ\", \"ユ\", \"ヨ\",<br>    \"ラ\", \"リ\", \"ル\", \"レ\", \"ロ\",<br>    \"ワ\", \"ヲ\", \"ン\",<br>    \"ァ\", \"ィ\", \"ゥ\", \"ェ\", \"ォ\",<br>    \"ャ\", \"ュ\", \"ョ\",<br>    \"ッ\",<br>    \"ガ\", \"ギ\", \"グ\", \"ゲ\", \"ゴ\",<br>    \"ザ\", \"ジ\", \"ズ\", \"ゼ\", \"ゾ\",<br>    \"ダ\", \"ヂ\", \"ヅ\", \"デ\", \"ド\",<br>    \"バ\", \"ビ\", \"ブ\", \"ベ\", \"ボ\",<br>    \"パ\", \"ピ\", \"プ\", \"ペ\", \"ポ\"<br>  ];<br><br>  const japaneseChars = text.match(new RegExp(`[${hiragana.join(\"\")}${katakana.join(\"\")}]`, 'g')) || [];<br>  return japaneseChars.length / text.length >= 0.2;<br>}<br>// 检查文本是否包含英文，并检查英文占比<br>function shouldTranslateEnglish(text) {<br>    const englishChars = text.match(/[a-zA-Z]/g) || [];<br>    return englishChars.length / text.length >= 0.60;<br>}<br><br>// 显示翻译结果<br>function displayTranslation(translatedText) {<br>    const translatedDiv = document.createElement('div');<br>    translatedDiv.style.marginTop = '10px';<br>    translatedDiv.innerHTML = `<hr><h3>翻译结果：</h3><p>${translatedText.replace(/\\n/g, '<br>')}</p>`;<br>    if (isSubjectPage) {<br>        detailElement.parentNode.insertBefore(translatedDiv, document.getElementById('translationStatus').nextSibling);<br>    } else {<br>        detailElement.appendChild(translatedDiv);<br>    }<br>}<br><br><br>// 执行翻译<br>function translate() {<br>    const textToTranslate = detailElement.innerText;<br>    displayStatus(\"翻译中...\");<br><br>    let prompt;<br>    if (useNewPromptFormat === 1) {<br>        let glossaryText = \"\";<br>        if (glossary && glossary.length > 0) {<br>            const glossaryLines = glossary.map(item => {<br>                const info = item.info ? ` #${item.info}` : \"\";<br>                return `${item.src}->${item.dst}${info}`;<br>            });<br>            glossaryText = \"根据以下术语表：\\n\" + glossaryLines.join('\\n') + \"\\n\";<br>        }<br><br>        prompt = `<|im_start|>system\\n你是一个轻小说翻译模型，可以流畅通顺地以日本轻小说的风格将日文翻译成简体中文，并联系上下文正确使用人称代词，不擅自添加原文中没有的代词。<|im_end|>\\n` +<br>                  `<|im_start|>user\\n${glossaryText}将下面的日文文本翻译成中文：${textToTranslate}<|im_end|>\\n` +<br>                  `<|im_start|>assistant\\n`;<br>    } else {<br>        prompt = `把这段日语文本直接翻译为中文文本,不保留任何非中文语言和额外内容: \"\\n\\n${textToTranslate}\"`;<br>    }<br><br>    const requestBody = { model, prompt, stream: false };<br><br>    GM_xmlhttpRequest({<br>        method: 'POST',<br>        url: ollamaEndpoint,<br>        headers: { 'Content-Type': 'application/json' },<br>        data: JSON.stringify(requestBody),<br>        onload: function(response) {<br>            try {<br>                const responseJson = JSON.parse(response.responseText);<br>                if (responseJson.response) {<br>                    const translatedText = responseJson.response;<br>                    displayTranslation(translatedText);<br>                    GM_setValue(cacheKey, translatedText);<br>                    displayStatus(\"\");<br>                } else {<br>                    displayStatus('翻译失败: ' + (responseJson.error || 'Unexpected response format.'));<br>                }<br>            } catch (error) {<br>                displayStatus('解析JSON响应失败: ' + error);<br>            }<br>        },<br>        onerror: function(error) {<br>            displayStatus('请求失败: ' + error);<br>        }<br>    });<br>}<br>displayStatus(\"正在检测...\");<br><br>if (shouldTranslateJapanese(detailElement.innerText) || shouldTranslateEnglish(detailElement.innerText)) {<br>    const cachedData = GM_getValue(cacheKey);<br>    if (cachedData) {<br>        displayStatus(\"正在调用缓存...\");<br>        displayTranslation(cachedData);<br>        displayStatus(\"\");<br>    } else {<br>        displayStatus(\"\");<br>        translate();<br>    }<br>} else {<br>    displayStatus(\"\");<br>}<br><br>})();</pre></div>","time":"2024-10-24 23:12","title":"谁来帮我改一下代码,实现大模型流式翻译 Bangumi 的作品简介和角色简介,感激不尽","userId":"magisutan","userName":"Sedoruee","userSign":"(欢迎加入苞谷米摸鱼大队，Q群号1030903124)"}