{"id":346910,"avatar":"//lain.bgm.tv/pic/user/m/000/11/88/118807.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"写个替换文件的APP，被h5+的plus.io恶心到了......全是回调回调回调<img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><br>写到最后发现h5+只能readAsText / readAsDataURL，靠读取为DataURL才能保证数据完整，但.......保存就GG了<img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><br>写入只有write（string）不管怎么保存都会数据损坏<img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><br><br>我！只是想！替换个文件！！！<img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"><br><br>---------<br>H5+：<a href=\"http://www.html5plus.org/doc/h5p.html\" target=\"_blank\" rel=\"nofollow external noopener\" class=\"l\">html5plus</a>，主要用于小成本开发移动端APP，就是拿webview读本地页面当做APP本体用<br>用它的原因主要是前辈说让我先熟悉一下<a href=\"http://dev.dcloud.net.cn/mui/\" target=\"_blank\" rel=\"nofollow external noopener\" class=\"l\">MUI</a>，练练手<br>---------<br>解决了更新一下<br>踩过的坑：H5+有File.copyTo，但完全不能用。<br>解决方案：直接调用kotlin(java)类实现相关功能<br>缺点：效率低<br>代码：<br>Kotlin:<br>package top.kuriko<br>import java.io.File<br>class File {<br>    fun cpfile(source: String, target: String) = File(source).copyTo(File(target), true)<br>}<br><br>JS:<br>try {<br>    var ff = plus.android.newObject('top.kuriko.File');<br>    plus.android.invoke(ff, 'cpfile', newf, oldf);<br>    mui.toast(\"替换成功\");<br>} catch(e) {<br>    mui.toast(\"替换失败\"); //plus.android无法捕获java执行失败的错误信息，故不输出错误信息<br>}<br><br>----------原代码：感受一下nativejs的可怕吧！<br>----------最后的处理因为无法写入完整数据所以还另外写了个APP靠scheme调用处理<br>plus.io.resolveLocalFileSystemURL(oldf, function(ofs) { //打开旧文件 //回调*1<br>  ofs.remove(function() { //删除旧文件 //回调*2<br>    var oldff = splitpath(oldf);<br>    plus.io.resolveLocalFileSystemURL(oldff.path + '/', function(ods) { //打开旧目录 //回调*3<br>      ods.getFile(oldff.name,<br>        create: true<br>      }, function(odf) { //创建目标 //回调*4<br>        plus.io.resolveLocalFileSystemURL(newf, function(nfs) { //打开新文件 //回调*5<br>          nfs.file(function(nfd) { //获取新文件数据对象 //回调*6<br>            var fr = new plus.io.FileReader();<br>            fr.onload = function(e) { //读取新文件内容 //回调*7<br>              odf.createWriter(function(fw) { //创建写入器FileWriter  //回调*8<br>                fw.onwrite = function() { //写入完成后  //回调*9<br>                  window.location = \"kuriko://base64?path=\" + oldf; //scheme调用解码Base64<br>                  setTimeout(function() {<br>                    mui.toast(\"替换成功\");<br>                  }, cfg.mindelay * 4);<br>                  hv.cancelsel();<br>                };<br>                fw.onerror = function() {<br>                  mui.toast(\"替换失败：写入文件失败\");<br>                }<br>                fw.write(e.target.result.substr(e.target.result.indexOf(\",\") + 1));<br>              });<br>            }<br>            fr.readAsDataURL(nfd, \"UTF-8\"); //这里读出来是Base64<br>            nfd.close();<br>          });<br>        });<br>      }, function() {<br>        mui.toast(\"替换失败：创建目标文件失败\");<br>      });<br>    });<br>  }, function() {<br>    mui.toast(\"替换失败：删除目标文件失败\");<br>  });<br>}); ","time":"2018-9-9 01:17","title":"如何使用H5+解码base64并存储完整文件？","userId":"kuri_ko","userName":"桜野くりこ","userSign":"(人类是无法互相理解的)"}