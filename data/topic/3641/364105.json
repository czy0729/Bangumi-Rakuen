{"id":364105,"avatar":"//lain.bgm.tv/pic/user/m/000/28/16/281614.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"换个描述。<br>现有一批数据点，每个数据点在k个维度上各有一个坐标，没有在每一个维度上坐标都相同的数据点，每一个维度下各有n个数据点，总共有n^k个数据点。<br>要求能以O(n)的时间复杂度输出在指定维度上坐标==指定值，能随时添加任意多的维度，而且占据空间尽可能小的结构。<br>随便挑个一维开始作多维数组遍历倒是方便，但时间复杂度就得到O(n^k)去了。如果每维都存一个数组，空间复杂度就会爆。不知有没有现有的结构或搜索用的关键词。<br><br>写了个python例子<br><div class=\"codeHighlight\"><pre>#init ([10,10])<br>structure=[]<br>for a in range(10):<br>    for b in range(10):<br>        structure+=[[0,a,b]]<br>#set data point ([0,0],1)<br>for i in structure:<br>    if i[1]==0 and i[2]==0:<br>        i[0]=1<br>#add dimension (10)<br>for i in structure:<br>    for a in range(10):<br>        structure+=[i+[a]]<br>    structure.remove(i)<br>#print (0,0)<br>for i in structure<br>    if i[1]==0 and i[2]==0:<br>        print(i)<br>        </pre></div><br><span style=\"background-color:#555;color:#555;border:1px solid #555;\">表格式的这种<br>X 1 2<br>1 0 1<br>2 1 0<br>要求能以O(n)的时间复杂度返回任意一维标签下的结果，比如(X,1)返回((1,0),(2,1))。</span> ","time":"2021-7-23 03:05","title":"多维数据检索应该采取何种结构？","userId":"281614","userName":"夏日勘探者","userSign":"(家に帰るまでが遠足です)"}