{"id":370566,"avatar":"//lain.bgm.tv/pic/user/m/000/64/82/648272.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"BBCode格式没有细看，文章是MarkDown格式的QAQ。<br><br># 前言<br><br>我朋友看了这个帖子：[下载党本地媒体库怎么管理？](<a href=\"https://bgm.tv/group/topic/367485\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">https://bgm.tv/group/topic/367485</a>)<br>于是他来问我：“如果有个专注于ACGMN的内容管理系统，你都些需要什么功能？”<br><br><br># 我的意见<br><br>## 资源上载(Upload)<br><br>要管理前得先有资源不是！资源上载有多个形式，各有优劣<br><br>- 手动录入：这种形式就是，手动创建资源，输入元数据信息，上载文件资源等操作，就算是通过自动化程序批量上载，也还是比较繁琐，繁琐是缺点，但是有点也很明显，就是非常的灵活。<br>- 联动QBittorent下载：下载完成后进行操作适配程序然后上载到数据库或按指定的规则存放到指定的文件夹，让程序能读取。<br>- 引入JavaBT库：直接在程序里下载资源，然后上载到数据库或者按指定的规则存放到指定的文件夹，这个找到一个库(mpetazzoni/ttorrent)，但是这个库已经没人在维护了，好像最新的commit时间是2年前，最新的release是4年前，改改应该大概也许能用QAQ。<br><br>## 动画(Anime)<br><br>动画方面主要专注于进度同步，媒体存储，元数据挂削，媒体播放，播放器习惯化。如果能做到类似早些年B站的那种体验就好了，B站现在的追番体验也不行了，APP越来越臃肿，还有开屏广告。<br><br>- 资源文件存储：这个是按下载的文件夹存放然后程序读取？还是像视频网站一样文件单独存比如对象存储或者服务器文件系统里？因为这涉及到对文件的管理之类的。如果是类似Jellyfin的读取文件夹的，那文件的命名规则就比较重要，是Jellyfin一样按S1E1这样的？还是根据动画和各种BD命名指定规则集？个人感觉读取文件夹的这种，既然Jellyfin已经做了，就别用这种的存储方式，重复了。但如果是类似视频网站把文件上传到指定位置，那这又有个上传的动作，虽然可以通过程序实现批量上传，但还是增加了整理的难度。<br>- 元数据的自动获取和进度管理：元数据的获取，这个直接用bgm.tv我觉得OK，还能顺便同步进度，比如你在其它网站比如B站已经看了，在手机上随手点下格子，程序这边就同步了，反之同理。<br>- 更符合习惯的播放器：Jellyfin的播放器我个人不是很习惯，双击是快进，我老是需要暂停的时候双击了，然后结果就快进了，我个人还是习惯类似B站播放器。<br><br>## 漫画(Comic)<br><br>漫画方面，同样有类似的问题：<br><br>- 资源文件的存储：这个是读取文件夹，还是上载存放当程序的文件系统里，我个人像动漫方面一样，更情绪存放到程序的文件系统里，毕竟只是读取文件夹，很多方案已经可以做到了，比如 一个漫画读取软件 + 局域网文件读取协议。<br>- 元数据的挂削：主要使用bgmtv，再结合其它几个网站<br>- 漫画阅读器：这个我不是经常看漫画，感觉没啥思路<br><br>## 游戏(Galgame)<br><br>游戏方面，痛点在于大量的游戏一个是整理起来麻烦，二是找起来麻烦<br><br>- 资源文件的存储：我还是推荐上载存放到程序的文件系统里，找起来可以选择直接查询数据库，这比在一堆文件夹里找方便多了，缺点同样是有了上载这步骤，增加了整理的难度。<br>- 元数据的挂削：主要使用bgmtv，再结合其它几个网站<br>- 进度的管理：还是结合bgmtv，bgmtv yyds。<br>- 游戏的文件压缩和游玩：游戏再程序的文件系统里，都是已压缩包的形式存放，如果想玩了，则搜下对应的游戏，下载对应的压缩包到你的设备进行游玩。<br><br>## 音乐(Music)<br><br>音乐方面，我受够了网易云臃肿的体积和频繁的开屏广告(特别是有什么活动的时候)，我现在使用的方案是Navidrome + subsonic api 客户端，这个客户端大部分都是国外开发者开发的，我用的很不习惯QAQ。<br><br>- 资源文件的存储：同样，上载存放到程序的文件系统里<br>- 实现subsonic api规范：这点我不知道合不合适，是直接自定义接口就行了，还是实现这个规范。<br>- 符合习惯的客户端：尽量接近网易云的只播放音乐的功能的体验<br>- 元数据的挂削：主要使用bgmtv，再结合其它几个网站<br>- 进度的管理：还是结合bgmtv，bgmtv yyds。<br>- 歌单啥的：音乐肯定得有歌单啥的，这个看着挺简单的，就一个歌曲列表。还有特殊的歌单比如 爱心歌单 。<br><br>## 小说(Novel)<br><br>小说这块，估计主要是阅读器这块<br><br>- 资源文件的存储：同样，上载存放到程序的文件系统里<br>- 符合习惯的阅读器：有很多设计的优秀的阅读器可以借鉴<br>- 小说肯定有书单啥的：也是一个列表<br>- 进度的记录：记录书记的观看进度<br>- 元数据的挂削：主要使用bgmtv，再结合其它几个网站<br><br>## 资源的备份(Backup)<br><br>针对不常用资源自动归档或者手动进行归档或者针对单个资源进行归档，使用加密算法进行分片加密(要保证单片文件无法被解密，没有任何原文件特征)，将文件分片存放到云服务比如网盘、对象存储等，要用的时候再从这些云服务获取这些文件分片，合并解密再存放到程序的文件系统里。<br><br>数据库也要定时备份或者手动备份<br><br>## END<br><br>有新功能想法的朋友可以在下方留言，或者到这个地址发起一个讨论: <a href=\"https://github.com/orgs/ikaros-dev/discussions\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">https://github.com/orgs/ikaros-dev/discussions</a> ","time":"2022-6-12 01:26","title":"如果有个专注于ACGMN的内容管理系统，你都些需要什么功能？","userId":"liguohaocn","userName":"安静的阿豪","userSign":"(这人没有写签名)"}