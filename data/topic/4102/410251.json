{"id":410251,"avatar":"//lain.bgm.tv/pic/user/m/000/34/15/341599.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"组件好像没有，也可能我漏看了，用gpt写了个。<br>折叠bgm连续的重复评论脚本，在评论加载完成时生效。<br>如图<br><img src=\"https://s2.loli.net/2024/11/23/AlWyOGEMrfJ8Y1S.png\" class=\"code\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\" alt><br><img src=\"https://s2.loli.net/2024/11/23/Ld3lNxf41UOtaR8.png\" class=\"code\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\" alt><br>脚本<br><div class=\"codeHighlight\"><pre>// ==UserScript==<br>// [user=name]名字[/user]         折叠bgm楼层连续重复评论<br>// [user=name]名字[/user]space    http://tampermonkey.net/<br>// @version      1.0<br>// @description  自动折叠连续重复的楼层评论和楼中楼<br>// @author       ChatGPT<br>// @match        *://bgm.tv/*<br>// @match        *://bangumi.tv/*<br>// @match        *://chii.in/*<br>// [user=grant]七濑[/user]        none<br>// ==/UserScript==<br><br>(function () {<br>    \"use strict\";<br><br>    const processedPosts = new Set(); // 用于记录已处理的评论节点<br>    let pendingPosts = []; // 用于存储新增的评论节点<br><br>    // 核心功能：折叠重复评论<br>    function foldDuplicateFloors(posts) {<br>        const floorGroups = [];<br>        let lastContent = null;<br>        let currentGroup = [];<br><br>        // 遍历楼层<br>        posts.forEach((post) => {<br>            const message = post.querySelector(\".message, .cmt_sub_content\");<br>            if (!message) return; // 跳过无内容楼层<br>            if (processedPosts.has(post)) return; // 跳过已处理的楼层<br><br>            const content = message.textContent.trim();<br><br>            if (content === lastContent) {<br>                currentGroup.push(post); // 将相同内容的楼层加入当前分组<br>            } else {<br>                if (currentGroup.length > 1) floorGroups.push([...currentGroup]); // 如果有重复评论，则记录<br>                currentGroup = [post]; // 开始新分组<br>            }<br><br>            lastContent = content;<br>            processedPosts.add(post); // 标记为已处理<br>        });<br><br>        if (currentGroup.length > 1) floorGroups.push([...currentGroup]);<br><br>        // 处理分组<br>        floorGroups.forEach((group) => {<br>            const firstPost = group[0];<br>            const remainingPosts = group.slice(1);<br><br>            // 创建折叠按钮<br>            const foldControl = document.createElement(\"div\");<br>            foldControl.textContent = `点击展开 ${remainingPosts.length} 条重复评论`;<br>            foldControl.style.cssText = `<br>                cursor: pointer;<br>                color: #555;<br>                font-size: 12px;<br>                margin-top: 5px;<br>                text-decoration: underline;<br>                display: inline-block;<br>            `;<br>            foldControl.classList.add(\"folded-control\");<br><br>            foldControl.addEventListener(\"click\", () => {<br>                remainingPosts.forEach((post) => {<br>                    post.style.display = \"\"; // 展开隐藏的评论<br>                });<br>                foldControl.remove(); // 移除按钮<br>            });<br><br>            // 折叠其他评论<br>            firstPost.appendChild(foldControl);<br>            remainingPosts.forEach((post) => {<br>                post.style.display = \"none\"; // 隐藏其余楼层<br>            });<br>        });<br><br>        // 递归处理楼中楼<br>        posts.forEach((post) => {<br>            const subReplies = post.querySelectorAll(\".topic_sub_reply > .sub_reply_bg\");<br>            if (subReplies.length > 0) {<br>                foldDuplicateFloors(Array.from(subReplies)); // 递归处理<br>            }<br>        });<br>    }<br><br>    // 动态监控评论区域的更新<br>    function monitorCommentArea() {<br>        const commentContainer = document.querySelector(\"#comment_list, .topic_sub_reply\");<br>        if (!commentContainer) return; // 如果未找到评论区域，直接返回<br><br>        let debounceTimeout;<br>        const observer = new MutationObserver((mutations) => {<br>            mutations.forEach((mutation) => {<br>                mutation.addedNodes.forEach((node) => {<br>                    if (<br>                        node.nodeType === 1 &&<br>                        (node.matches(\"div[data-item-user]\") || node.matches(\".sub_reply_bg\"))<br>                    ) {<br>                        pendingPosts.push(node); // 收集新增节点<br>                    }<br>                });<br>            });<br><br>            if (debounceTimeout) clearTimeout(debounceTimeout);<br>            debounceTimeout = setTimeout(() => {<br>                const postsToProcess = [...pendingPosts];<br>                pendingPosts = []; // 清空待处理队列<br>                foldDuplicateFloors(postsToProcess);<br>            }, 100); // 延迟处理，减少频繁操作<br>        });<br><br>        observer.observe(commentContainer, {<br>            childList: true,<br>            subtree: true,<br>        });<br>    }<br><br>    // 初始化脚本（立即检测评论区域）<br>    function initialize() {<br>        const initialPosts = Array.from(<br>            document.querySelectorAll(\"div[data-item-user], .sub_reply_bg\")<br>        );<br>        if (initialPosts.length > 0) {<br>            foldDuplicateFloors(initialPosts); // 立即处理已有评论<br>        }<br><br>        monitorCommentArea(); // 动态监听评论区域变化<br>    }<br><br>    // 等待 DOM 渲染完成后初始化脚本<br>    if (document.readyState === \"loading\") {<br>        document.addEventListener(\"DOMContentLoaded\", initialize);<br>    } else {<br>        initialize();<br>    }<br>})();<br></pre></div>","time":"2024-11-23 15:04","title":"一个折叠连续重复评论的脚本","userId":"download","userName":"依韵","userSign":""}