{"id":345141,"avatar":"//lain.bgm.tv/pic/user/m/000/24/39/243920.jpg","floor":"#1","group":"开新坑","groupHref":"/group/hsp","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/41/4181.jpg?r=1519441065","message":"URL [GET] <a href=\"http://bgm.acgforest.com/api\" target=\"_blank\" rel=\"nofollow external noopener\" class=\"l\">http://bgm.acgforest.com/api</a><br><br>参数<br>- subject_ids 条目 id 字段，包含了所需查询的条目id，用英文逗号 ',' 分隔<br>- spec 返回结果规格，取值为 detail 或 normal，默认为 normal<br><br>返回结果<br>数组，包含了请求查询条目的结果<br>当 spec 为 normal 时，条目内容为官方条目 API 返回结果除去 topic 和 blog 字段，例：<br>[<br>  { item_1 },<br>  { item_2 },<br>  ...<br>]<br><br>当 spec 为 detail 时，条目内容为<br>[<br>  {<br>    \"id\": 253,<br>    \"content\": {<br>       ...<br>    },<br>    \"created_at\": \"2017-12-27 15:40:14\",<br>    \"updated_at\": \"2017-12-27 15:40:14\"<br>  }<br>]<br><br>其中:<br>- content 即为原来 spce 为 normal 时的条目内容<br>- created_at 为条目数据的创建时间<br>- updated_at 为条目数据的最后更新时间<br><br>简单来说 detail 模式下是为了检查数据的时效性<br><br>测试样例：<a href=\"http://bgm.acgforest.com/api?subject_ids=1,7&spec=detail\" target=\"_blank\" rel=\"nofollow external noopener\" class=\"l\">http://bgm.acgforest.com/api?subject_ids=1,7&spec=detail</a><br><br>自己试试就知道怎么回事了233<br>-----------------------------------------<br>注1：以上 API 还在开发阶段，仅供测试，最好不要用到生产环境下<br><br>注2：数组查询条目数量一次上限50条<br><br>注3：服务器比较渣，速度比较慢，见谅<br>-----------------------------------------<br>开发目的是觉得爬虫爬一堆页面或者一次请求一堆 API，并发比较高，对 BGM 服务器来说压力应该不小而且浪费资源 ","time":"2018-2-24 18:53","title":"批量条目数据查询接口","userId":"243920","userName":"Vincent","userSign":"(混乱善良)"}