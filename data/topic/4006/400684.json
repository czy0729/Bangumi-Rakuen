{"id":400684,"avatar":"//lain.bgm.tv/pic/user/m/000/71/46/714685.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"突发奇想，既然我的MacBook也是ARM架构，那是不是也可以在Android Studio的模拟器（AVD）里面运行其他第三方镜像，于是就开始了这次尝试。<br><br>实际上我除了开发调试以外基本不会使用这个模拟器，所以纯粹是出于整活的乐趣，能跑得起来就算成功，实际体验倒是无所谓。<br><br>AVD的镜像里有个system.img，一开始我以为直接替换就完事，后来发现这个system.img并不是安卓里那个ext4的system分区，它其实是一个qemu raw镜像，里面有两个分区，分别是vbmeta和super，熟悉搞机的应该知道安卓的super分区，这里就不多解释了。<br><br>而这个super分区里面包含5个分区，用lpunpack解包之后可以分别获得vendor.img product.img system.img system_ext.img system_dlkm.img，这里面的system.img才是替换的目标。替换成第三方镜像（这里我用的是Andy Yan大佬的Lineage 21 GSI）之后，用lpmake重新打包成新的super.img。<br><br>将super.img写入上面说的AVD的system.img的super分区里，大致操作就是用losetup给system.img创建一个loop设备，使用kpartx映射分区，直接通过cat写入分区，最后detach即可。<br><br>不过直接运行还是有一些SELinux上的问题，只有将SELinux设为permissive才能开机。就如同上面说的，只要能正常进入系统就算成功，所以还是挺满意的。接下来有空我打算也试试其他有意思的GSI镜像。<br><br><img src=\"https://image.coolapk.com/feed/2024/0622/23/2071824_2110e90a_9094_0694_493@3024x1964.png.m.jpg\" class=\"code\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\" alt>","time":"2024-6-24 10:54","title":"尝试在Mac的AVD（安卓模拟器）里运行第三方GSI","userId":"714685","userName":"h3nt4i","userSign":""}