{"id":372920,"avatar":"//lain.bgm.tv/pic/user/m/000/45/19/451958.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"平台：Windows 10<br>版本：opencv460，C++<br><a href=\"https://docs.opencv.org/4.6.0/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">cv::imread</a>想必玩过opcv的都用过。它的参数string filename传入图片路径。<br><br>我发现imread似乎要求filename这个字符串的编码与当前系统语言地区编码一致。假如当前系统语言是简体中文，即系统编码为gbk (cp936) ，那么传入utf-8的filename会使imread无法识别，只有gbk编码的filename才行。<br>反之，若当前Windows勾选了“使用UTF-8提供全球语言支持”，即系统编码为utf-8（cp65001），那么只能传入utf-8编码的filename。<br><br>插播，Windows查看系统地区编码的方式：<br>1. 打开cmd，输入chcp<br>2. Python的<a href=\"https://docs.python.org/zh-cn/3.8/library/locale.html#locale.getdefaultlocale\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">getdefaultlocale</a><br><br>回归正题。我希望程序能在所有的系统地区语言上跑起来，比如日文cp932、西欧cp1252等等。<br>那么，我是不是应该先将目标filename（utf-8）转码成对应的系统编码，再传入 imread ？<br><br>这引发了两个主要问题：<br>1. C++下有啥可用的编解码库，可以实现如此多种编码的互转？<br>2. 是不是意味着 imread 不可能读入 <span style=\"font-weight:bold;\">含有超出此编码的字符</span> 的路径？比如系统编码是cp1252，<span style=\"font-weight:bold;\">含中文的utf-8字符串不可能转码为cp1252</span>，那不管怎么整 都没有办法把中文路径弄进 imread<img src=\"/img/smiles/tv/15.gif\" smileid=\"54\" alt=\"(bgm38)\"> ","time":"2022-9-10 10:03","title":"求助，Windows系统语言区域与 cv::imread 传入路径编码 相关问题","userId":"451958","userName":"冈崎羽未鹰原汐","userSign":"(二阶堂芽爱 小河坂青空)"}