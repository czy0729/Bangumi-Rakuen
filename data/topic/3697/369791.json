{"id":369791,"avatar":"//lain.bgm.tv/pic/user/m/000/38/41/384101.jpg","floor":"#1","group":"～技术宅真可怕～","groupHref":"/group/a","groupThumb":"//lain.bgm.tv/pic/icon/m/000/00/00/11.jpg","message":"不得不说WAV的metadata真的是万恶之源，至今都没有一个公认的metadata标准，各家的实现各不相同。而这也导致了，我们在管理音乐的过程中基本都会遇到WAV引起的乱码问题。<br><br>Wav和FLAC都是无损格式，理论上来说两者的播放效果是相同的，所以笔者决定把部分WAV音乐转化为FLAC。当然，由于两种格式的解码过程不同，也有说法是两者的播放效果可能有差异，但笔者就暂不考虑这一问题了。<br><br>除了必要的Python外，还需要安装的有 ffmpeg 。<br><br><a href=\"https://ffmpeg.org/download.html\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">ffmpeg官网</a>只给了源代码，笔者建议直接下载编译版，比如 <a href=\"https://www.gyan.dev/ffmpeg/builds/\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">Windows builds from gyan.dev</a> 或者 <a href=\"https://evermeet.cx/ffmpeg/\" target=\"_blank\" rel=\"nofollow external noopener noreferrer\" class=\"l\">Static builds for macOS 64-bit </a>。下载并解压后记得将bin目录添加至环境变量。<br><br>Python的代码如下，记得将路径替换为你的音乐所在的文件夹。有一点要注意，脚本会在转换完成后删除原文件，如果打算保留原文件请删除或者注释最后一行。<br><div class=\"codeHighlight\"><pre><br>import os<br><br>def wavToFlac(file_dir):<br>    save_dir = file_dir.replace('.wav', '.flac')<br>    cmd = 'ffmpeg -i \"%s\" \"%s\"' %(file_dir, save_dir)<br>    os.system(cmd)<br><br><br>if __name__ == \"__main__\":<br><br>    g = os.walk(r'D:\\\\Your\\\\path')<br>    for path,dir_list,file_list in g:  <br>        for file_name in file_list:  <br>            if file_name.split('.')[-1] == 'wav':<br>                full_name = os.path.join(path, file_name)<br>                wavToFlac(full_name)<br>                os.remove(full_name) # 删除原文件<br></pre></div> ","time":"2022-5-18 00:28","title":"Python实现批量转换WAV到FLAC","userId":"384101","userName":"薛定谔的龙","userSign":"(#善良守序 #前男子高中生 #洛斯里克的薪王 #最后的狩 ...)"}