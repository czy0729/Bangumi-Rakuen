[{"avatar":"//lain.bgm.tv/pic/user/m/000/11/21/112191.jpg","floor":"#2","id":"1271838","time":"2017-8-14 20:01","userId":"halfelf","userName":"halfelf","userSign":"(a halfelf ronin)","message":"如果只是精进而看编译型为什么不是C呢？C是硬件最好的抽象没有之一，而且语法简单，编译过程本身也简单。<br><br>精进是一个缓慢的过程，我的看法是大部分情况下不在于语言，是随着精进，对于不舒服的感觉越来越明显而准确。比如OP说交流后感觉有很大进步空间，能不能交流前就发现其中一部分进步空间呢？ 就是写着写着不爽，会想，这个部分肯定有更好的方案，这么写太tm蠢了。<br><br>具体我也不好说这应该用怎样的途径去提升，我只能说一个，比如refactoring这本书，最有用的一章是坏味道，至于坏味道如何解决，会google就会解决。而使用google，在google中使用精准的英文词汇描述问题也是一项重要的技能。<br><br>语言的问题都是旁枝问题，诚然不同抽象也会有不同的感觉。如果选几个体会一下的话那就是7 lang in 7 weeks里几种吧。","sub":[{"avatar":"//lain.bgm.tv/pic/user/m/000/28/57/285770.jpg","floor":"#2-1","id":"1272851","time":"2017-8-19 12:29","userId":"no1xsyzy","userName":"InQβ","userSign":"","message":"不过坑多（一半来自向后兼容），但是相对地，了解所有坑了以后就能对硬件有更好的了解"}]},{"avatar":"//lain.bgm.tv/pic/user/m/000/27/39/273934.jpg","floor":"#3","id":"1271866","time":"2017-8-14 22:19","userId":"273934","userName":"本子战士","userSign":"(B站难民)","message":"我觉得可以多读读代码。","sub":[]},{"avatar":"//lain.bgm.tv/pic/user/m/000/03/74/37469.jpg","floor":"#4","id":"1271879","time":"2017-8-14 22:53","userId":"fantasy","userName":"fantasy","userSign":"(Q, Σ, Γ, δ, q0, Z0, F)","message":"SICP看过没有？<br>CSAPP看过没有？<br>设计模式看过没有？<br><br>还有建议玩玩Rust。","sub":[]},{"avatar":"//lain.bgm.tv/pic/user/m/000/18/82/188293.jpg","floor":"#5","id":"1271882","time":"2017-8-14 23:18","userId":"laike9m","userName":"laike9m","userSign":"","message":"Fluent Python 呢？如果也能看懂 70% 那就没必要继续学 Python 了","sub":[]},{"avatar":"//lain.bgm.tv/pic/user/m/icon.jpg","floor":"#6","id":"1271906","time":"2017-8-15 00:06","userId":"glennq","userName":"Glenn","userSign":"","message":"这跟语言没关系，关键是要有参照有代码审查。只写给自己看的代码很容易就怎么方便怎么写了","sub":[]}]